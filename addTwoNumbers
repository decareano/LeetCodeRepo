//standard setup for LL. it creates a *SINGLE* node
//with a value and next

function ListNode(val, next) {
     this.val = (val===undefined ? 0 : val)
     this.next = (next===undefined ? null : next)
}



// below initialize

var addTwoNumbers = function(l1, l2) {
    let list = new ListNode()
    console.log(list)
    let currNode = list
    let carry = 0
    let sum = 0
    
    
    
    
    while (l1 !== null || l2 !== null) {
      if (l1 !== null) {
        sum += l1.val
        l1 = l1.next
      }
      if (l2 !== null) {
        sum += l2.val
        l2 = l2.next
      }
      
      carry = Math.floor(sum / 10)
      sum = sum % 10
      currNode.next = new ListNode(sum)
      currNode = currNode.next
      sum = carry
      carry = 0
      
    }
    
    return list.next
    
};
// note the final result is a LL not an array
const l1 = { val: 2, next: { val: 4, next: { val: 3, next: null } } }
const l2 = { val: 5, next: { val: 6, next: { val: 4, next: null } } }

addTwoNumbers(l1, l2)
